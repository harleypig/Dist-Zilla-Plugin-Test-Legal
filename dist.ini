; This file is generated from dist.ini.meta by dzil bakeini.
; Edit that file or the bundles contained within for long-term changes.
; authordep Pod::Weaver::Plugin::EnsureUniqueSections
; authordep Pod::Weaver::Plugin::StopWords
; authordep Pod::Weaver::Section::Changes
; authordep Pod::Weaver::Section::Installation
; authordep Pod::Weaver::Section::Requires
; authordep Pod::Weaver::Section::SeeAlso
; authordep Pod::Weaver::Section::Support
; authordep Pod::Weaver::Section::WarrantyDisclaimer
name = Dist-Zilla-Plugin-Test-Legal
author = Alan Young <ayoung@cpan.org>
license = Perl_5
copyright_holder = Alan Young
copyright_year = 2014

[PromptIfStale]
check_all_plugins = 1

[GatherDir]
include_dotfiles = 1
prune_directory = .git

[Git::ExcludeUntracked]

[CPANFile]

[License]

[MetaJSON]

[MetaYAML]

[ConsistentVersionTest]

[HasVersionTests]

[MetaTests]

[NoSmartCommentsTests]

[PodCoverageTests]

[PodSyntaxTests]

[ReportVersions]

[Test::ChangesHasContent]

[Test::CheckDeps]

[Test::CheckManifest]

[Test::CleanNamespaces]

[Test::Compile]

[Test::Compile::PerFile]

[Test::CPAN::Changes]

[Test::CPAN::Meta::JSON]

[Test::DistManifest]

[Test::EOL]

[Test::Inline]

[Test::Kwalitee]

[Test::MinimumVersion]

[Test::NoTabs]

[Test::Pod::LinkCheck]

[Test::Pod::No404s]

[Test::ReportPrereqs]

[Test::UnusedVars]

[Test::UseAllModules]

[Test::Version]

[Test::Perl::Critic]

[Test::PodSpelling]
wordlist = Pod::Wordlist
spell_cmd = aspell list
stopwords = LICENCE
stopwords = MERCHANTABILITY
stopwords = bakeini

[InstallGuide]

[Manifest]

[ManifestSkip]

[PruneFiles]
filename = cover
filename = dist.ini
filename = docs
filename = weaver.ini
match = ^\..*\.sw.$

[PruneCruft]
except = \.perl.*

[Git::NextVersion]
first_version = 0.01

[NextRelease]

[OurPkgVersion]

[Git::Contributors]

[PodWeaver]

[ReadmeAnyFromPod]

[ReadmeAnyFromPod / PodRoot]
filename = README.pod

[PerlTidy]

[GitHub::Meta]

[MetaNoIndex]
directory = t
directory = xt

[CheckChangeLog]

[ExecDir]

[ModuleBuild]
mb_version = 0.4208

[ShareDir]

[CheckSelfDependency]

[CheckChangesHasContent]

[CheckIssues]

[CheckMetaResources]

[Git::Check]
untracked_files = ignore

[TestRelease]

[ConfirmRelease]

[RunExtraTests]

[if::not::ENV / ifnotENV::FakeRelease]
key = REALRELEASE
dz_plugin = FakeRelease

[if::ENV / ifENV::UploadToCPAN]
key = REALRELEASE
dz_plugin = UploadToCPAN

[if::ENV / ifENV::GitCommit]
key = REALRELEASE
dz_plugin = Git::Commit

[if::ENV / ifENV::GitCommitBuild]
key = REALRELEASE
dz_plugin = Git::CommitBuild
> = branch =
> = release_branch = release
> = release_message = %v%t-%h

[if::ENV / ifENV::GitTag]
key = REALRELEASE
dz_plugin = Git::Tag
> = tag_format = v%v%t
> = branch = release

[if::ENV / ifENV::GitPush]
key = REALRELEASE
dz_plugin = Git::Push
> = push_to = origin
> = push_to = origin HEAD:refs/head/release
> = push_to = origin HEAD:refs/notes/commits

[if::ENV / ifENV::Twitter]
key = REALRELEASE
dz_plugin = Twitter
> = tweet = Released {{$DIST}}-{{$VERSION}}{{$TRIAL}} {{$URL}} - {{$ABSTRACT}}
> = hash-tags = #perl #cpan

[if::ENV / ifENV::SchwartzRatio]
key = REALRELEASE
dz_plugin = SchwartzRatio

[Clean]

[AutoPrereqs]

[Prereqs::AuthorDeps]

[Prereqs / ConfigureRequires]
Module::Build::Version = 0

[Prereqs / TestRequires]
Test::CheckManifest = 0
Test::ConsistentVersion = 0
Test::CPAN::Meta::JSON = 0
Test::DistManifest = 0
Test::HasVersion = 0
Test::MinimumVersion = 0
Test::NoSmartComments = 0
Test::Perl::Critic = 0
Test::Version = 0
Test::Pod::Content = 0
